version: 2.1
jobs:
  node:
    # working_directory: ~/getting-started-example/packages/testApp
    docker:
      - image: cimg/node:16.20

    steps:
      - checkout
      - run: yarn install
  
  sonarqube-docker:
      docker:
        - image: cimg/base:current
      steps:
        # ... steps for building/testing app ...
        - checkout:
            path: ~/project
        - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
        - run: |
            docker run -d -p 9000:9000 sonarsource/sonar-scanner-cli:latest
            
            docker run -d  --rm \
              -e SONAR_HOST_URL="http://localhost:9000" \
              -e SONAR_SCANNER_OPTS="-Dsonar.projectKey=MONOREPO -Dsonar.sources=./packages -Dsonar.login=admin -Dsonar.password=admin" 
              -v "~/packages" 
              sonarsource/sonar-scanner-cli

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest

    steps:
      - checkout:
            path: ~/project
      - run: |
          echo "------PWD------"
          pwd
          cd ~
          
          echo "------ LS ~ ------"
          ls -la
          cd project
          
          echo "------LS PROJECT------"
          ls -la

          echo "------SONAR SCANNER------"
          
          # sonar-scanner \
          #   -Dsonar.projectKey=MONOREPO \
          #   -Dsonar.sources=./packages \
          #   -Dsonar.login=admin \
          #   -Dsonar.password=admin \
          #   -Dsonar.host.url=http://localhost:9000
          
          echo "------DONE!------"


  android-build-and-test:
    # working_directory: ~/getting-started-example/packages/testApp/android
    docker:
      - image: circleci/android:api-30-node
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: ~/project
      
      - run:
          name: build android
          command: |
            cd ~
            mkdir -p out
            cd project
            cd packages/testApp
            npm install
            cd android
            ./gradlew clean
            ./gradlew assembleRelease
            mv app/build/outputs/apk/release/app-release.apk ~/out/release.apk
      - store_artifacts:
          path: ~/out


workflows:
  node-android-ios:
    jobs:
      - node
      # - sonarqube
      - sonarqube-docker
      - android-build-and-test:
          requires:
            - node
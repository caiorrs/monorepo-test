version: 2.1
jobs:
  node:
    # working_directory: ~/getting-started-example/packages/testApp
    docker:
      - image: cimg/node:16.20

    steps:
      - checkout
      - run: yarn install
  
  # sonarqube:
  #   docker:
  #     - image: sonarqube:latest
  #   steps:
  #     - run: |
  sonarqube:
    docker:
      - image: cimg/base:current-22.04

    steps:
      - checkout:
            path: ~/project
      # Commands will execute in macOS container
      # with Xcode 14.2.0 installed
      - run: |
          echo "------PWD------"
          pwd
          cd ~
          
          echo "------ LS ~ ------"
          ls -la
          cd project
          
          echo "------LS PROJECT------"
          ls -la
          
          echo "INSTALL DOCKER"
          # sudo apt-get update
          # sudo apt-get install ca-certificates curl gnupg
          # sudo install -m 0755 -d /etc/apt/keyrings
          # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          # sudo chmod a+r /etc/apt/keyrings/docker.gpg
          # echo \
          # "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          # "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          # sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo dockerd
          sudo docker run hello-world
          sudo docker compose version
          
          echo "------SONAR SCANNER------"
          # apt-get install unzip wget nodejs
          # mkdir /downloads/sonarqube -p
          # cd /downloads/sonarqube
          # wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip
          # unzip sonar-scanner-cli-4.2.0.1873-linux.zip
          # mv sonar-scanner-4.2.0.1873-linux /opt/sonar-scanner

          
          echo "------DOCKER------"
          # docker-compose up -d
          docker run -d -p 9000:9000 sonarqube:latest
          
          echo "------SONAR SCANNER------"
          docker run \
            --rm \
            -e SONAR_HOST_URL="http://localhost:9000" \
            -e SONAR_SCANNER_OPTS="-Dsonar.projectKey=MONOREPO" -Dsonar.login=admin -Dsonar.password=admin \ 
            -v "./packages" \
            sonarsource/sonar-scanner-cli
          
          # sonar-scanner \
          #   -Dsonar.projectKey=MONOREPO \
          #   -Dsonar.sources=./packages \
          #   -Dsonar.login=admin \
          #   -Dsonar.password=admin \
          #   -Dsonar.host.url=http://localhost:9000
          
          echo "------DONE!------"


  android-build-and-test:
    # working_directory: ~/getting-started-example/packages/testApp/android
    docker:
      - image: circleci/android:api-30-node
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: ~/project
      
      - run:
          name: build android
          command: |
            cd ~
            mkdir -p out
            cd project
            cd packages/testApp
            npm install
            cd android
            ./gradlew clean
            ./gradlew assembleRelease
            mv app/build/outputs/apk/release/app-release.apk ~/out/release.apk
      - store_artifacts:
          path: ~/out


workflows:
  node-android-ios:
    jobs:
      - node
      - sonarqube
      - android-build-and-test:
          requires:
            - node